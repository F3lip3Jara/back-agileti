<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class ViewUserEmp extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {

           /*CREATE OR REPLACE VIEW usuarios( token, name, email, imgName, idRol, rolDes, emploNom, emploApe, emploFecNac, gerId, gerDes , activado, reinicio ,created_at , id) AS( SELECT a.token, a.name, a.email, c.emploAvatar, a.idRol, b.RolDes, c.emploNom, c.emploApe, c.emploFecNac, c.gerId, d.gerDes , a.activado , a.reinicio ,a.created_at , a.id FROM users a JOIN roles b ON a.idRol = b.idRol LEFT JOIN empleados c ON a.id = c.id LEFT JOIN gerencia d ON c.gerId = d.gerId);
           CREATE OR REPLACE VIEW tblusuarios( id, name, email, rolDes, emploNom, emploApe, emploFecNac, gerDes, activado, reinicio, created_at ) AS( SELECT a.id, a.name, a.email, b.RolDes, c.emploNom, c.emploApe, c.emploFecNac, d.gerDes, CASE WHEN a.activado = 'A' THEN "ACTIVADO" WHEN a.activado = 'D' THEN "DESACTIVADO" END AS 'activado', CASE WHEN a.reinicio = 'S' THEN "SI" WHEN a.reinicio = 'N' THEN "NO" END 'reinicio', a.created_at FROM users a JOIN roles b ON a.idRol = b.idRol LEFT JOIN empleados c ON a.id = c.id LEFT JOIN gerencia d ON c.gerId = d.gerId ORDER BY a.created_at DESC );
           CREATE OR REPLACE VIEW regiones (idReg, regDes, regCod, empId, idPai, created_at, updated_at , paiDes , paiCod) as ( SELECT a.idReg, a.regDes, a.regCod, a.empId, a.idPai, a.created_at, a.updated_at , paiDes , paiCod from region a join pais b on a.idPai = b.idPai );
           CREATE OR REPLACE VIEW comunas (idCom, comDes, comCod, empId, idPai, idReg,idCiu , ciuDes , created_at, updated_at , paiCod , paiDes , regCod , regDes) AS (SELECT idCom, comDes, comCod, a.empId, a.idPai, a.idReg,  a.idCiu , ciuDes , a.created_at, a.updated_at , paicod , paiDes , regCod , regDes  from comuna a JOIN region b on a.idReg = b.idReg join pais c on a.idPai = c.idPai join ciudad d on a.idCiu = d.idCiu);
           CREATE OR REPLACE VIEW ciudades ( empId, idPai, idReg, created_at, updated_at , paiCod , paiDes , regCod , regDes , idCiu , ciuDes , ciuCod) AS (SELECT a.empId, a.idPai, a.idReg, a.created_at, a.updated_at , paicod , paiDes , regCod , regDes , a.idCiu , ciuDes , ciuCod from ciudad a JOIN region b on a.idReg = b.idReg JOIN pais c on a.idPai = c.idPai ) ;
           CREATE OR REPLACE VIEW proveedores( id , rut , nombre,nombre_fantasia,giro,pais,region,comuna,ciudad,direccion,numero,telefono ,es_cliente, es_proveedor,mail , activado)AS ( SELECT idPrv ,prvRut, prvNom, prvNom2, prvGiro,b.paiDes , c.regDes,d.comDes,e.ciuDes, prvDir, prvNum , prvTel, prvCli, prvPrv, prvMail , prvAct from proveedor a join pais b on a.idPai = b.idPai join region c on a.idReg = c.idReg join comuna d on a.idCom = d.idCom join ciudad e on a.idCiu = e.idCiu );
           CREATE OR REPLACE VIEW proveedores_dir( id,rut ,pais,region,comuna,ciudad,direccion,numero)AS ( SELECT a.idPrvd , f.prvRut,b.paiDes , c.regDes,d.comDes,e.ciuDes, prvdDir, prvdNum From prv_dir_des a join pais b on a.idPai = b.idPai join region c on a.idReg = c.idReg join comuna d on a.idCom = d.idCom join ciudad e on a.idCiu = e.idCiu join proveedor f on a.idPrv = f.idPrv);
           CREATE OR REPLACE VIEW productos( id, cod_pareo, descripcion, observaciones, cod_rapido, cod_barra, tipo,grupo , sub_grupo , color , moneda ,costo, neto, bruto, medida , peso, minimo, inventariable, created_at, updated_at) As ( SELECT a.idPrd, prdCod, prdDes, prdObs, prdRap, prdEan, prdTip,c.grpDes , d.grpsDes , e.colDes , b.monCod , prdCost, prdNet, prdBrut, f.unDes , prdPes, prdMin,prdInv , a.created_at, a.updated_at from producto a join moneda b on a.idMon = b.idMon join grupo c on a.idGrp = c.idGrp join sub_grupo d on a.idSubGrp = d.idSubGrp join color e on a.idCol = e.idCol join un_medida f on a.idUn = f.idUn);
  
          CREATE OR REPLACE VIEW ordenes_de_trabajos  AS  (select a.idOrdt AS id,b.orpNumRea AS orden_produccion,b.orpFech AS orden_prod_fec,a.orptUsrG AS usuario_genera,case when a.orptEst = 1 then 'PENDIENTE' when a.orptEst = 2 then 'EN PROCESO' end AS estado,a.orptPrio AS prioridad,a.created_at AS created_at,a.updated_at AS updated_at from (ord_trabajo a join ord_produccion b on(a.idOrp = b.idOrp))) ;
           CREATE OR REPLACE VIEW ordenes_de_trabajos_det AS( SELECT a.idOrdt AS id, b.idorp AS orden_produccion, c.ordtdPrdCod FROM ( ord_trabajo a JOIN ord_produccion b ON a.idOrp = b.idOrp JOIN ord_trabajo_det c ON a.idOrdt = c.idOrdt ) ) ;
          CREATE OR REPLACE VIEW mezclas AS( SELECT a.idMez AS id, a.mezUsu AS usuario, a.mezLotSal AS lote_salida, a.mezKil AS kilos, a.mezMaq AS maquina, b.etaDes AS etapa, a.mezprdDes AS producto, CASE WHEN a.mezTip = 'S' THEN 'SACA' WHEN a.mezTip = 'B' THEN 'BINS' END AS tipo, CASE WHEN a.mezEst = 'P' THEN 'PENDIENTE' WHEN a.mezEst = 'A' THEN 'APROBADA' END AS estado_pro, CASE WHEN a.mezEstCtl = 'P' THEN 'PENDIENTE' WHEN a.mezEstCtl = 'A' THEN 'APROBADA' WHEN a.mezEstCtl = 'R' THEN 'RECHAZADA' END AS estado_control, CASE WHEN a.mezTurn = 1 THEN 'TURNO 1' WHEN a.mezTurn = 2 THEN 'TURNO2' END AS turno, a.mezObs AS observaciones, a.created_at AS created_at, a.updated_at AS updated_at FROM mezcla a JOIN etapasUser b ON (a.mezidEta = b.idEta) );
           CREATE OR REPLACE VIEW extrusiones AS( SELECT a.idExt AS id, a.extUsu AS usuario, a.extLotSal AS lote_bobina, a.extAnbob AS ancho_bobina, a.extMaq AS maquina, a.extKilApr AS kilos, a.extKilR AS kilos_repro, b.etaDes AS etapa, a.extPrdDes AS producto, c.mezLotSal AS lote_mezcla, a.extFor AS formato, d.motDes AS mot_rechazo, CASE WHEN a.extEst = 'P' THEN 'PENDIENTE' WHEN a.extEst = 'A' THEN 'APROBADA' END AS estado_pro, CASE WHEN a.extEstCtl = 'P' THEN 'PENDIENTE' WHEN a.extEstCtl = 'A' THEN 'APROBADA' WHEN a.extEstCtl = 'R' THEN 'RECHAZADA' END AS estado_control, CASE WHEN a.extTurn = 1 THEN 'TURNO 1' WHEN a.extTurn = 2 THEN 'TURNO2' END AS turno, a.extObs AS observaciones, a.created_at AS created_at, a.updated_at AS updated_at FROM  extrusion a LEFT JOIN etapasUser b ON a.extidEta = b.idEta LEFT JOIN mezcla c ON  a.extIdMez = c.idMez LEFT JOIN mot_rechazo d ON  a.extIdMot = d.idMot);
           CREATE OR REPLACE VIEW menu_roles AS( SELECT a.idMol, a.idRol, b.molDes, b.molIcon, c.idOpt, c.optDes, c.optLink, c.optSub, d.optSDes, d.optSLink FROM roles_mod_opt a JOIN roles_module b ON a.idMol = b.idMol JOIN roles_opt c ON a.idOpt = c.idOpt LEFT JOIN roles_opt_sub d ON c.idOpt = d.idOpt );
    CREATE OR REPLACE VIEW Aop_pendiente AS (select sum((SELECT COUNT(0) FROM ord_produccion_det e WHERE e.idOrp = a.idOrp)- (SELECT COUNT(0) FROM ordenes_de_trabajos_det f WHERE f.orden_produccion = a.idOrp)) as pendientes , a.idOrp from ord_produccion a GROUP by idOrp);
  
  CREATE OR REPLACE VIEW orden_produccion AS( SELECT `a`.`idOrp` AS `id`, `a`.`orpUsrG` AS `usuario`, `a`.`orpNumOc` AS `orden_compra`, `a`.`orpNumRea` AS `orden_produccion`, `b`.`prvRut` AS `rut_cliente`,`a`.`orpFech` AS `fecha`, CASE WHEN `a`.`orpEst` = 1 THEN 'PENDIENTE' WHEN `a`.`orpEst` = '1' THEN 'PROCESANDO' END AS `estado_ord`,CASE WHEN `a`.`orpEstPrc` = 1 THEN 'PENDIENTE' WHEN `a`.`orpEstPrc` = '1' THEN 'PARCIAL' END AS `estado_pro`,`a`.`orpObs` AS `observaciones`, (SELECT COUNT(0) FROM `ord_produccion_det` `c` WHERE `c`.`idOrp` = `a`.`idOrp`) AS `prd_total`, c.pendientes AS prd_pendientes, d.etaDes as etapa, `a`.`created_at` AS `created_at`,`a`.`updated_at` AS `updated_at` FROM `ord_produccion` `a` JOIN `proveedor` `b` ON `a`.`idPrv` = `b`.`idPrv` JOIN Aop_pendiente c ON c.idOrp = a.idOrp JOIN etapasUser d ON d.idEta = a.idEta ) ;

      CREATE OR REPLACE VIEW ordenes_de_termoformado AS( SELECT a.idOrdt AS id, e.idTer  as id_termo, b.orpUsrG AS usuario_genera, b.orpNumOC AS oc, b.idOrp AS op, b.orpFech AS orden_prod_fec, CASE WHEN a.orptEst = 1 THEN 'PENDIENTE' WHEN a.orptEst = 2 THEN 'EN PROCESO' WHEN a.orptEst = 3 THEN 'CERRADA' END AS estado_orden, CASE WHEN e.terEst = 'P' THEN 'PENDIENTE' WHEN e.terEst = 'A' THEN 'APROBADA' WHEN e.terEst = 'R' THEN 'RECHAZADA' END AS estado_termo_op, CASE WHEN e.terEstCtl = 'P' THEN 'PENDIENTE' WHEN e.terEstCtl = 'A' THEN 'APROBADA' WHEN e.terEstCtl = 'R' THEN 'RECHAZADA' END AS estado_termo_ctl, a.orptPrio AS prioridad, d.ordtdPrdDes AS producto, d.ortdSol AS cantidad_sol, e.terLotSal AS lote_salida, CASE WHEN e.terTip = 'P' THEN 'Pallet' WHEN e.terTip = 'B' THEN 'Bins' END AS tipo, e.terMaq AS maquina, CASE WHEN e.terTurn = 1 THEN 'Turno 1' WHEN e.terTurn = 2 THEN 'Turno 2' END AS turno, f.prdDes AS tipo_caja, e.terLotCaja AS lote_caja, g.prdDes AS tipo_bolsa, e.terLotBolsa AS lote_bolsa, a.created_at AS created_at, a.updated_at AS updated_at FROM ord_trabajo a JOIN ord_produccion b ON (a.idOrp = b.idOrp) JOIN etapasUser c ON (b.idEta = c.idEta) JOIN ord_trabajo_det d ON ( a.empId = d.empId AND a.idOrdt = d.idOrdt ) LEFT JOIN termoformado e ON ( a.empId = e.empId AND a.idOrdt = e.idOrdt ) LEFT JOIN producto f ON (e.terPrdCaja = f.idPrd) LEFT JOIN producto g ON (e.terPrdBolsa = g.idPrd) WHERE c.idEta = 5 );
      CREATE OR REPLACE VIEW ordenes_de_envasado AS( SELECT a.idOrdt AS id, e.idEnv as id_envasado, b.orpUsrG AS usuario_genera, b.orpNumOC AS oc, b.idOrp AS op, b.orpFech AS orden_prod_fec, CASE WHEN a.orptEst = 1 THEN 'PENDIENTE' WHEN a.orptEst = 2 THEN 'EN PROCESO' WHEN a.orptEst = 3 THEN 'CERRADA' END AS estado_orden, CASE WHEN e.envEst = 'P' THEN 'PENDIENTE' WHEN e.envEst = 'A' THEN 'APROBADA' WHEN e.envEst = 'R' THEN 'RECHAZADA' END AS estado_termo_op, CASE WHEN e.envEstCtl = 'P' THEN 'PENDIENTE' WHEN e.envEstCtl = 'A' THEN 'APROBADA' WHEN e.envEstCtl = 'R' THEN 'RECHAZADA' END AS estado_termo_ctl, a.orptPrio AS prioridad, d.ordtdPrdDes AS producto, d.ortdSol AS cantidad_sol, e.envLotSal AS lote_salida, e.envMaq AS maquina, CASE WHEN e.envTurn = 1 THEN 'Turno 1' WHEN e.envTurn = 2 THEN 'Turno 2' END AS turno, f.prdCod AS tipo_caja, e.envLotCaja AS lote_caja, g.prdcod AS tipo_bolsa, e.envLotBolsa AS lote_bolsa, a.created_at AS created_at, a.updated_at AS updated_at FROM ord_trabajo a JOIN ord_produccion b ON (a.idOrp = b.idOrp) JOIN etapasUser c ON (b.idEta = c.idEta) JOIN ord_trabajo_det d ON ( a.empId = d.empId AND a.idOrdt = d.idOrdt ) LEFT JOIN termoformado h ON ( a.empId = h.empId AND a.idOrdt = h.idOrdt ) JOIN envasado e ON ( a.empId = e.empId AND e.idTer = h.idTer ) LEFT JOIN producto f ON (e.envPrdCaja = f.idPrd) LEFT JOIN producto g ON (e.envPrdBolsa = g.idPrd) );
     CREATE or REPLACE VIEW `ordenes_de_inyeccion` AS (select `a`.`idOrdt` AS `id`,`e`.`idIny` AS `id_inye`,`b`.`orpUsrG` AS `usuario_genera`,`b`.`orpNumOc` AS `oc`,`b`.`idOrp` AS `op`,`b`.`orpFech` AS `orden_prod_fec`,case when `a`.`orptEst` = 1 then 'PENDIENTE' when `a`.`orptEst` = 2 then 'EN PROCESO' when `a`.`orptEst` = 3 then 'CERRADA' end AS `estado_orden`,case when `e`.`inyEst` = 'P' then 'PENDIENTE' when `e`.`inyEst` = 'A' then 'APROBADA' when `e`.`inyEst` = 'R' then 'RECHAZADA' end AS `estado_inye_op`,case when `e`.`inyEstCtl` = 'P' then 'PENDIENTE' when `e`.`inyEstCtl` = 'A' then 'APROBADA' when `e`.`inyEstCtl` = 'R' then 'RECHAZADA' end AS `estado_inye_ctl`,`a`.`orptPrio` AS `prioridad`,`d`.`ordtdPrdDes` AS `producto`,`d`.`ortdSol` AS `cantidad_sol`,`e`.`inyLotSal` AS `lote_salida`,case when `e`.`inyTip` = 'P' then 'Pallet' when `e`.`inyTip` = 'B' then 'Bins' end AS `tipo`,`e`.`inyMaq` AS `maquina`,case when `e`.`inyTurn` = 1 then 'Turno 1' when `e`.`inyTurn` = 2 then 'Turno 2' end AS `turno`,`f`.`prdDes` AS `tipo_caja`,`e`.`inyLotCaja` AS `lote_caja`,`g`.`prdDes` AS `tipo_bolsa`,`e`.`inyLotBolsa` AS `lote_bolsa`,`a`.`created_at` AS `created_at`,`a`.`updated_at` AS `updated_at` from ((((((`agiletic_marpledes`.`ord_trabajo` `a` join `agiletic_marpledes`.`ord_produccion` `b` on(`a`.`idOrp` = `b`.`idOrp`)) join `agiletic_marpledes`.`etapasUser` `c` on(`b`.`idEta` = `c`.`idEta`)) join `agiletic_marpledes`.`ord_trabajo_det` `d` on(`a`.`empId` = `d`.`empId` and `a`.`idOrdt` = `d`.`idOrdt`)) left join `agiletic_marpledes`.`inyeccion` `e` on(`a`.`empId` = `e`.`empId` and `a`.`idOrdt` = `e`.`idOrdt`)) left join `agiletic_marpledes`.`producto` `f` on(`e`.`inyPrdCaja` = `f`.`idPrd`)) left join `agiletic_marpledes`.`producto` `g` on(`e`.`inyPrdBolsa` = `g`.`idPrd`)) where `c`.`idEta` = 7);
    */}

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {

    }
}
